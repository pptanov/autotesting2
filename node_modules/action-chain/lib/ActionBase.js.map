{"version":3,"file":"ActionBase.js","sourceRoot":"","sources":["../src/ActionBase.ts"],"names":[],"mappings":"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","sourcesContent":["import { ActionChain } from './ActionChain'\nimport { ExecutionContext } from './types'\n\nexport class StopExecution {\n  constructor(public value: any) {}\n}\nexport class ActionBase<Effects> {\n  static nextActionId: number = 0\n  private currentExecutionId = 0\n  constructor(\n    private actionChain: ActionChain<Effects>,\n    private initialActionId: number = ActionBase.nextActionId++,\n    private runOperators?: (\n      value: any,\n      executionContext: ExecutionContext,\n      newPath?: string\n    ) => any | Promise<any>\n  ) {\n    interface I extends ActionBase<Effects> {\n      (value: any): I\n      displayName: string\n    }\n    this.getActionChain = this.getActionChain.bind(this)\n\n    const instance: I = Object.assign(function(value) {\n      const initialOperator = typeof arguments[1] === 'undefined'\n      const newPath = typeof arguments[2] === 'undefined' ? null : arguments[2]\n      const executionContext: ExecutionContext = initialOperator\n        ? {\n            __execution: {\n              operatorId: -1,\n              actionId: initialActionId,\n              executionId: instance.currentExecutionId++,\n            },\n            __path: [],\n          }\n        : arguments[1]\n      if (initialOperator) {\n        actionChain.emit('action:start', {\n          actionId: executionContext.__execution.actionId,\n          executionId: executionContext.__execution.executionId,\n          actionName: instance.displayName,\n          value,\n        })\n      }\n      const returnValue = runOperators\n        ? runOperators(value, executionContext, newPath)\n        : value\n\n      if (initialOperator && returnValue instanceof Promise) {\n        returnValue.then(() => {\n          actionChain.emit('action:end', {\n            actionId: executionContext.__execution.actionId,\n            executionId: executionContext.__execution.executionId,\n            actionName: instance.displayName,\n          })\n        })\n      } else if (initialOperator) {\n        actionChain.emit('action:end', {\n          actionId: executionContext.__execution.actionId,\n          executionId: executionContext.__execution.executionId,\n          actionName: instance.displayName,\n        })\n      }\n\n      return returnValue\n    }, this) as any\n\n    return instance\n  }\n  getActionChain<ExtraEvents = {}>() {\n    return this.actionChain as ActionChain<Effects, ExtraEvents>\n  }\n  createOperatorResult = (\n    type: string,\n    name: string,\n    cb: any\n  ): [ActionChain<Effects>, number, any] => {\n    return [\n      this.actionChain,\n      this.initialActionId,\n      (props, executionContext, newPath) => {\n        const executionContextWithPath = {\n          __execution: executionContext.__execution,\n          __path: newPath\n            ? executionContext.__path.concat(newPath)\n            : executionContext.__path.slice(),\n        }\n        const prevResult = this.runOperators\n          ? this.runOperators(props, executionContextWithPath)\n          : props\n\n        const produceResult = (currentValue) => {\n          if (currentValue instanceof StopExecution) {\n            return currentValue\n          }\n\n          const thisExecution = {\n            ...executionContextWithPath.__execution,\n            operatorId: executionContextWithPath.__execution.operatorId + 1,\n          }\n\n          executionContextWithPath.__execution.operatorId++\n\n          const path = executionContextWithPath.__path\n\n          const effects = Object.assign(\n            {},\n            this.actionChain.getEffects(thisExecution),\n            executionContextWithPath\n          )\n\n          this.actionChain.emit('operator:start', {\n            type,\n            name,\n            path,\n            ...thisExecution,\n          })\n          const result = cb(effects, currentValue)\n\n          if (result instanceof Promise) {\n            this.actionChain.emit('operator:async', {\n              type,\n              name,\n              path,\n              isAsync: true,\n              ...thisExecution,\n            })\n            return result.then((promiseResult) => {\n              this.actionChain.emit('operator:end', {\n                type,\n                name,\n                path,\n                ...thisExecution,\n                isAsync: true,\n                result: promiseResult,\n              })\n              return promiseResult\n            })\n          }\n\n          this.actionChain.emit('operator:end', {\n            type,\n            name,\n            path,\n            ...thisExecution,\n            isAsync: false,\n            result: result,\n          })\n\n          return result\n        }\n\n        if (prevResult instanceof Promise) {\n          return prevResult.then(produceResult)\n        }\n\n        return produceResult(prevResult)\n      },\n    ]\n  }\n}\n"]}