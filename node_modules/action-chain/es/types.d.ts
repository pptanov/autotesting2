export declare type Execution = {
    operatorId: number;
    actionId: number;
    executionId: number;
};
export declare type ExecutionContext = {
    __execution: Execution;
    __path: string[];
};
export declare type ActionExecution = {
    actionId: number;
    executionId: number;
    actionName: string;
    value?: any;
};
export declare type OperatorExecution = {
    actionId: number;
    executionId: number;
    operatorId: number;
    type: string;
    name: string;
    path: string;
};
export declare type EffectResult = {
    name: string;
    method: string | number | symbol;
    result: any;
    args: any[];
};
export interface ActionChainEvents {
    effect: Execution & EffectResult;
    'action:start': ActionExecution;
    'action:end': ActionExecution;
    'operator:start': OperatorExecution;
    'operator:async': OperatorExecution & {
        isAsync: true;
    };
    'operator:end': OperatorExecution & {
        isAsync: boolean;
        result: any;
    };
}
