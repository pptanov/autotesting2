import * as tslib_1 from "tslib";
import { EventEmitter } from 'betsy';
import { proxifyEffects } from './utils';
var IS_DEVELOPMENT = process.env.NODE_ENV !== 'production';
var ActionChain = /** @class */ (function (_super) {
    tslib_1.__extends(ActionChain, _super);
    function ActionChain(effects, options) {
        if (options === void 0) { options = {}; }
        var _this = _super.call(this) || this;
        _this.effects = effects;
        _this.options = options;
        return _this;
    }
    ActionChain.prototype.getEffects = function (thisExecution) {
        var _this = this;
        if (IS_DEVELOPMENT) {
            return proxifyEffects(this.effects, this.options.providerExceptions, function (effect) { return _this.emitAsync('effect', tslib_1.__assign({}, thisExecution, effect)); });
        }
        return this.effects;
    };
    return ActionChain;
}(EventEmitter));
export { ActionChain };
//# sourceMappingURL=ActionChain.js.map